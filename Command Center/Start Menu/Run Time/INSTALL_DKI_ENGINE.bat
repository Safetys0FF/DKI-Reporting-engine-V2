@echo off
title DKI Engine - One-Click Installer
color 0B
setlocal EnableDelayedExpansion

set "SCRIPT_DIR=%~dp0"
for %%I in ("%SCRIPT_DIR%..") do set "REPORT_DIR=%%~fI"
for %%I in ("%REPORT_DIR%\..") do set "PROJECT_ROOT=%%~fI"
if not defined PROJECT_ROOT set "PROJECT_ROOT=%REPORT_DIR%"

set "VENV_DIR=%PROJECT_ROOT%\dki_env"
if exist "%PROJECT_ROOT%\.venv\Scripts\python.exe" (
    set "VENV_DIR=%PROJECT_ROOT%\.venv"
)

set "LAUNCHER=%SCRIPT_DIR%START_HERE.bat"
set "UNINSTALLER=%SCRIPT_DIR%UNINSTALL_DKI_ENGINE.bat"
set "ICON_FILE=%REPORT_DIR%\UI\icon.ico"
set "QUICK_START=%SCRIPT_DIR%QUICK_START.md"
set "INSTALL_FLAG=%REPORT_DIR%\installation.flag"

REM ========================================
REM    DKI ENGINE ONE-CLICK INSTALLER
REM ========================================

echo.
echo  ????????????????????? ?????????  ??????????????????    ????????????????????????????????????   ????????? ????????????????????? ?????????????????????   ?????????????????????????????????
echo  ????????????????????????????????? ?????????????????????    ???????????????????????????????????????  ????????????????????????????????? ????????????????????????  ?????????????????????????????????
echo  ?????????  ?????????????????????????????? ?????????    ??????????????????  ?????????????????? ??????????????????  ??????????????????????????????????????? ???????????????????????????  
echo  ?????????  ?????????????????????????????? ?????????    ??????????????????  ???????????????????????????????????????   ??????????????????????????????????????????????????????????????????  
echo  ?????????????????????????????????  ??????????????????    ????????????????????????????????? ??????????????????????????????????????????????????????????????? ??????????????????????????????????????????
echo  ????????????????????? ?????????  ??????????????????    ?????????????????????????????????  ??????????????? ????????????????????? ??????????????????  ???????????????????????????????????????
echo.
echo                    ???? Professional Investigation Platform ????
echo                           ONE-CLICK INSTALLATION SYSTEM
echo.
echo ================================================================================

REM Check for Administrator privileges
net session >nul 2>&1
if %errorLevel% == 0 (
    echo ??? Administrator privileges confirmed
) else (
    echo ??????  WARNING: Running without administrator privileges
    echo Some features may require elevation
    echo.
)

REM Step 1: Check Python Installation
echo [1/6] ???? Checking Python installation...
python --version >nul 2>&1
if errorlevel 1 (
    echo ??? Python not found! Installing Python...
    
    REM Download Python installer
    echo ???? Downloading Python 3.11...
    powershell -Command "& {[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Invoke-WebRequest -Uri 'https://www.python.org/ftp/python/3.11.9/python-3.11.9-amd64.exe' -OutFile 'python_installer.exe'}"
    
    if exist python_installer.exe (
        echo ???? Installing Python (this may take a few minutes)...
        python_installer.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0
        del python_installer.exe
        
        REM Refresh environment variables
        echo ???? Refreshing environment...
        call refreshenv.cmd >nul 2>&1
        
        REM Test Python again
        python --version >nul 2>&1
        if errorlevel 1 (
            echo ??? Python installation failed. Please install manually from python.org
            pause
            exit /b 1
        )
    ) else (
        echo ??? Failed to download Python installer
        echo Please install Python manually from https://python.org
        pause
        exit /b 1
    )
)

for /f "tokens=2" %%i in ('python --version 2^>^&1') do set PYTHON_VERSION=%%i
echo ??? Python %PYTHON_VERSION% found!

REM Step 2: Create Virtual Environment
echo [2/6] ???????  Creating virtual environment...
if exist "%VENV_DIR%\Scripts\python.exe" (
    echo ??? Virtual environment already exists at %VENV_DIR%
) else (
    echo Creating virtual environment at %VENV_DIR%...
    python -m venv "%VENV_DIR%"
    if errorlevel 1 (
        echo ??? Failed to create virtual environment
        pause
        exit /b 1
    )
    echo ??? Virtual environment created successfully!
)

set "VENV_PYTHON=%VENV_DIR%\Scripts\python.exe"
set "VENV_PIP=%VENV_DIR%\Scripts\pip.exe"
if not exist "%VENV_PYTHON%" (
    echo ??? Virtual environment Python binary missing at %VENV_PYTHON%
    pause
    exit /b 1
)

REM Step 3: Upgrade pip and install dependencies
echo [3/6] ???? Installing dependencies...
echo This may take several minutes...

"%VENV_PYTHON%" -m pip install --upgrade pip --quiet
if errorlevel 1 (
    echo ??????  Warning: pip upgrade failed, continuing...
)

REM Install core dependencies
echo Installing core packages...
"%VENV_PIP%" install --quiet tkinter-tooltip pillow reportlab python-docx openpyxl pandas numpy requests beautifulsoup4 cryptography

REM Install AI/ML packages
echo Installing AI/ML packages...
"%VENV_PIP%" install --quiet openai transformers torch spacy

REM Install media processing
echo Installing media processing packages...
"%VENV_PIP%" install --quiet opencv-python librosa soundfile ffmpeg-python moviepy

REM Install OCR and document processing
echo Installing OCR packages...
"%VENV_PIP%" install --quiet pytesseract PyPDF2 pdfplumber easyocr

REM Install additional utilities
echo Installing utilities...
"%VENV_PIP%" install --quiet selenium psutil tkinterdnd2

REM Install OpenAI Whisper
echo Installing OpenAI Whisper...
"%VENV_PIP%" install --quiet openai-whisper

echo ??? All dependencies installed successfully!

REM Step 4: Create Desktop Shortcuts
echo [4/6] ???????  Creating desktop shortcuts...

set "DESKTOP=%USERPROFILE%\Desktop"

REM Create main shortcut
echo Creating DKI Engine shortcut...
powershell -Command "& {$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%DESKTOP%\DKI Engine.lnk'); $Shortcut.TargetPath = '%LAUNCHER%'; $Shortcut.WorkingDirectory = '%REPORT_DIR%'; $Shortcut.IconLocation = '%ICON_FILE%'; $Shortcut.Description = 'DKI Engine - Professional Investigation Platform'; $Shortcut.Save()}"

REM Create uninstaller shortcut
echo Creating uninstaller shortcut...
powershell -Command "& {$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%DESKTOP%\Uninstall DKI Engine.lnk'); $Shortcut.TargetPath = '%UNINSTALLER%'; $Shortcut.WorkingDirectory = '%PROJECT_ROOT%'; $Shortcut.Description = 'Uninstall DKI Engine'; $Shortcut.Save()}"

echo ??? Desktop shortcuts created!

REM Step 5: Create Start Menu entries
echo [5/6] ???? Creating Start Menu entries...

set "STARTMENU=%APPDATA%\Microsoft\Windows\Start Menu\Programs"
if not exist "%STARTMENU%\DKI Engine" mkdir "%STARTMENU%\DKI Engine"

REM Main application
powershell -Command "& {$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%STARTMENU%\DKI Engine\DKI Engine.lnk'); $Shortcut.TargetPath = '%LAUNCHER%'; $Shortcut.WorkingDirectory = '%REPORT_DIR%'; $Shortcut.Description = 'DKI Engine - Professional Investigation Platform'; $Shortcut.IconLocation = '%ICON_FILE%'; $Shortcut.Save()}"

REM Documentation
powershell -Command "& {$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%STARTMENU%\DKI Engine\Quick Start Guide.lnk'); $Shortcut.TargetPath = '%QUICK_START%'; $Shortcut.WorkingDirectory = '%REPORT_DIR%'; $Shortcut.Description = 'DKI Engine Quick Start Guide'; $Shortcut.Save()}"

REM Uninstaller
powershell -Command "& {$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%STARTMENU%\DKI Engine\Uninstall.lnk'); $Shortcut.TargetPath = '%UNINSTALLER%'; $Shortcut.WorkingDirectory = '%PROJECT_ROOT%'; $Shortcut.Description = 'Uninstall DKI Engine'; $Shortcut.Save()}"

echo ??? Start Menu entries created!

REM Step 6: System Validation
echo [6/6] ??? Running system validation...

REM Test Python environment
"%VENV_PYTHON%" -c "import tkinter, PIL, reportlab; print('Core dependencies OK')" >nul 2>&1
if errorlevel 1 (
    echo ??????  Warning: Some core dependencies may not be working properly
) else (
    echo ??? Core dependencies validated
)

REM Test AI dependencies
"%VENV_PYTHON%" -c "import openai, whisper; print('AI dependencies OK')" >nul 2>&1
if errorlevel 1 (
    echo ??????  Warning: AI dependencies may need additional setup
) else (
    echo ??? AI dependencies validated
)

REM Create installation flag
echo Installation completed on %date% at %time% > "%INSTALL_FLAG%"

echo.
echo ================================================================================
echo                           ???? INSTALLATION COMPLETE! ????
echo ================================================================================
echo.
echo ??? DKI Engine has been successfully installed!
echo.
echo ???? LAUNCH OPTIONS:
echo   ??? Desktop shortcut: "DKI Engine"
echo   ??? Start Menu: All Programs ??? DKI Engine ??? DKI Engine
echo   ??? Direct: Double-click %LAUNCHER%
echo.
echo ???? DOCUMENTATION:
echo   ??? Quick Start: %QUICK_START%
echo   ??? Desktop shortcut: "Uninstall DKI Engine"
echo.
echo ???? FEATURES INSTALLED:
echo   ??? 13 Professional report sections
echo   ??? AI-powered analysis (OpenAI integration)
echo   ??? Audio/video processing with transcription
echo   ??? OCR document processing
echo   ??? OSINT investigation tools
echo   ??? Real-time system monitoring
echo.
echo Press any key to launch DKI Engine now, or close to finish installation.
pause

REM Launch application using activation module
echo ???? Launching DKI Engine...
set "ACTIVATION_SCRIPT=%SCRIPT_DIR%main_application_activation.py"
if exist "%ACTIVATION_SCRIPT%" (
    echo Using activation module for launch...
    "%VENV_PYTHON%" "%ACTIVATION_SCRIPT%"
) else (
    echo Using standard launcher...
    call "%LAUNCHER%"
)
