gateway_section_control:
  id: section_5_gateway_interface
  description: >
    Gateway interface for Section 5.
    Manages input/output binding, toolkit result injection,
    signal dispatching, and progress tracking.
  linked_to: callbox_central_dispatch
  section_id: section_5


gateway_callbox_hub:
  id: callbox_central_dispatch
  description: >
    Centralized gateway communication hub. Handles signal routing, tool triggers,
    section callouts, and cross-section data interactions.

  accepted_signals:
    - "10-4"
    - "10-9"
    - "10-10"
    - "10-6"
    - "10-8"

  on_signal:
    - if signal == "10-4":
        action:
          - unlock_next_section: true
          - log: "Signal 10-4: Section approved. Unlocked next section."

    - if signal == "10-9":
        action:
          - trigger_manual_review: true
          - log: "Signal 10-9: Routing to manual override."

    - if signal == "10-10":
        action:
          - freeze_gateway: true
          - notify: [lead_investigator]
          - log: "Signal 10-10: Gateway frozen per operator command."

    - if signal == "10-6":
        action:
          - broadcast_toolkit_context: true
          - log: "Toolkit initialized and dispatched to sections."

    - if signal == "10-8":
        action:
          - collect_output_payload
          - store_progress_flags
          - log: "Section reported complete. Gateway updated."

  fallback_logic:
    on_unrecognized_signal:
      - log: "Unknown signal received."
      - notify_admin: true

    on_timeout:
      - wait_duration: 48h
      - escalate_to: lead_investigator
      - log: "Callbox timeout. No response received in window."

callbox_endpoints:
  section_cp: "section_cp_response_handler"
  section_toc: "section_toc_response_handler"
  section_1: "section_1_response_handler"
  section_2: "section_2_response_handler"
  section_3: "section_3_response_handler"
  section_4: "section_4_response_handler"
  section_5: "section_5_response_handler"
  section_6: "section_6_response_handler"
  section_7: "section_7_response_handler"
  section_8: "section_8_response_handler"
  section_dp: "section_dp_response_handler"
  section_fr: "section_fr_response_handler"

section_transmission_check:
  id: section_{{ section_number }}_transmission_verification
  description: >
    Validates outbound toolkit signals were received by the callbox.
    Performs echo check and readiness confirmation loop.
section_5_toolkit_signal_emitter:
  sends:
    - to: callbox
  emit_signals:
    - signal: "section_completed"
      payload:
        origin: "section_5"
        summary: "{{ generated_summary }}"
        flags: "{{ section_flags }}"
    - signal: "ready_for_next"
      payload:
        from: "section_5"
    - log: "Section_5 dispatched completion signal to callbox."

gateway_signal_interpreter:
  on_toolkit_ready:
    - verify_payload
    - emit_signal: "toolkit_acknowledged"
      payload:
        section: "{{ incoming_signal.from }}"
        status: "confirmed"
    - log: "Toolkit ready signal acknowledged for {{ incoming_signal.from }}."

unified_toolkit_dispatch:
  id: master_toolkit_trigger
  description: >
    Calls the unified Python toolkit engine before each section report.
    Runs all tools (billing, continuity, metadata, etc.) and stores output.

  trigger_on: section_entry

  on_entry:
    - log: "Section_{{ section_number }} wake-up initiated."
    - fetch:
        - section_context.unified_results
        - report_meta
        - assigned_documents
        - previous_section.flags
    - apply_context:
        unified_results: "{{ section_context.unified_results }}"
        report_meta: "{{ report_meta }}"
        assigned_documents: "{{ assigned_documents }}"
        section_flags: "{{ previous_section.flags }}"
    - emit_signal:
        signal: "wake_up_call"
        payload:
          from: "section_{{ section_number }}"
          status: "initiated"
    - log: "Section_{{ section_number }} context loaded and wake-up signal emitted."

  action:
    - python_call:
        module: tools.master_toolkit_engine
        class: MasterToolKitEngine
        method: run_all
        inputs:
          section_id: "{{ current_section }}"
          text_data: "{{ section_text }}"
          report_meta: "{{ report_metadata }}"
          documents: "{{ document_set }}"
          assets: "{{ media_assets }}"
        store_as: unified_results

    - store_output:
        context_key: section_context.unified_results
    - log: "Unified toolkit analysis complete and results stored for reporting."

  on_failure:
    - if toolkit_run.failed:
        emit_signal: "10-10"
        log: "Toolkit failed. Section halted."
        escalate: lead_investigator

toolkit_endpoints:
  section_cp: "section_cp_response_handler"
  section_toc: "section_toc_response_handler"
  section_1: "section_1_response_handler"
  section_2: "section_2_response_handler"
  section_3: "section_3_response_handler"
  section_4: "section_4_response_handler"
  section_5: "section_5_response_handler"
  section_6: "section_6_response_handler"
  section_7: "section_7_response_handler"
  section_8: "section_8_response_handler"
  section_dp: "section_dp_response_handler"
  section_fr: "section_fr_response_handler"

section_5_toolkit_handler:
  on_entry:
    - run_tools:
        tools:
          - cochran_match_tool
          - northstar_protocol_tool
          - reverse_continuity_tool
          - metadata_tool_v_5
          - mileage_tool_v_2
      input:
        section_id: section_5
        text_data: "{{ section_text }}"
        meta: "{{ report_meta }}"
        docs: "{{ assigned_documents }}"
        media: "{{ media_assets }}"
      store_as: section_toolkit_results
    - log: "Section_5 tools executed."

  on_failure:
  on_failure:
    - if toolkit_run.failed:
        emit_signal: "10-10"
        log: "Toolkit failed. Section halted."
        escalate: lead_investigator

section_5_toolkit_emitter:
  sends:
    - to: callbox
  emit_signals:
    - signal: "toolkit_ready"
      payload:
        from: "section_5"
        tools_used:
          - cochran_match_tool
          - northstar_protocol_tool
          - reverse_continuity_tool
          - metadata_tool_v_5
          - mileage_tool_v_2
    - log: "Section_5 emitted toolkit ready signal."

section_5_toolkit_guard:
  on_entry:
    - fetch_manifest:
        from: "section_1"
        key: "toolkit_manifest.section_5"
        store_as: allowed_tools

    - validate_access:
        allowed: "{{ allowed_tools }}"
        attempted: "{{ tools_requested }}"
        on_violation:
          - emit_signal: "10-9"
          - log: "Unauthorized tool access in Section_5."

section_5_toolkit_ready:
  trigger_on: section_output_received
  steps:
    - wait_for: toolkit_result
    - emit_signal:
        signal: "10-6"
        payload:
          tools_ready: true
          section_id: "{{ current_section }}"
    - wait_for_signal:
        toolkit.10-4:
          action: continue
          log: "Gateway acknowledged toolkit readiness."
    - log: "Toolkit acknowledgment loop complete."
  logic:
    - if signal == "10-4":  # Section approved
        action:
          - unlock_next_section: true
          - log: "Approval received. Advancing to next section."

    - if signal == "10-9":  # Needs revision
        action:
          - reroute_to_section_editor: "{{ previous_section }}"
          - log: "Section flagged for revision. Returning to previous section."

    - if signal == "10-10":  # Halt
        action:
          - freeze_gateway: true
          - notify_roles: [lead_investigator]
          - log: "Critical halt triggered. Investigation suspended."

        fallback:
          - on_missing_signal:
        notify_roles: [qa_admin]
        log: "No response signal after section output. Manual review required."

gateway_tool_port_media:
  id: media_entry_port
  description: >
    Manages entry, verification, tagging, and linking of photo/video evidence.
    Requires user to assign narrative before toolkit triggers.

  accepted_inputs:
    - media_upload
    - section_reference
    - metadata_tags
    - user_narrative_link

  compliance_rules:
    - require_narrative_link == true
    - no auto-generated content allowed
    - audit_user_id == true

  on_upload:
    - verify_media_format
    - check_for_user_prompt
    - emit_signal: "media_attached"
      payload:
        section_id: "{{ section_reference }}"
        media_type: "{{ media_type }}"
        tags: "{{ metadata_tags }}"
    - log: "Media linked and approved by investigator."

  on_violation:
    - reject_upload
    - notify_user: "Narrative required before media linkage is allowed."

gateway_tool_port_documents:
  id: document_archive_port
  description: >
    Central archive for supporting documents. Ensures validation before linkage.
    Maintains audit logs for compliance.
gateway_tool_port_export:
  id: export_dispatch_port
  description: >
    Controls generation and secure delivery of finalized reports.
    Ensures final review was completed before exporting.

  preconditions:
    - section_lifecycle_complete == true
    - final_review_approved == true
    - compliance_clearance_passed == true

  accepted_requests:
    - export_type: ["pdf", "zip", "summary_only"]
    - delivery_target: ["client", "internal", "secure_archive"]

  on_export:
    - generate_package
    - emit_signal: "report_ready_for_delivery"
      payload:
        export_link: "{{ secure_url }}"
        type: "{{ export_type }}"
        recipient: "{{ delivery_target }}"
    - log: "Export complete and dispatched."

  on_blocked:
    - notify_user: "Cannot export. Final approval or lifecycle check not completed."

  accepted_inputs:
    - document_file
    - classification_tag
    - section_reference
    - user_confirmation

  validation_rules:
    - must_include_classification_tag
    - file_integrity_verified
    - user_role_allowed_to_upload == true

  on_document_link:
    - store_in_repository
    - emit_signal: "document_attached"
      payload:
        document_id: "{{ file_id }}"
        section_linked: "{{ section_reference }}"
    - log: "Document uploaded and approved for section {{ section_reference }}."

  on_reject:
    - notify_user: "Document missing classification or failed verification."

  toc_identifier: "{{ report_type | lower }}_toc"


section_handoff_router:
  id: section_handoff_controller
  description: >
    Coordinates lifecycle transitions between sections.
    Validates output, interprets gateway signals, and activates next section or returns for revision.

section_5_input:
  receives_from:
    - gateway
    - previous_section
  requires:
    - section_context.unified_results
    - report_meta
    - assigned_documents
    - section_flags
  initialize:
    - load_toolkit_results: "{{ section_context.unified_results }}"
    - apply_report_meta: "{{ report_meta }}"
    - verify_required_docs: "{{ assigned_documents }}"
    - inherit_flags: "{{ section_flags }}"

section_5_response_handler:
  receives:
    - from: callbox
    - accepted_signals:
        - "section_update"
        - "callback_confirmed"
        - "override_request"
  on_signal:
    - if signal == "section_update":
        update_context:
          key: section_context.sync
          value: "{{ signal_payload }}"
        log: "Section_5 synced with gateway payload."

    - if signal == "callback_confirmed":
        set_flag: section_validated
        log: "Section_5 confirmed by central callbox."

    - if signal == "override_request":
        trigger_manual_review: true
        log: "Manual review trigger set by callbox directive."

section_5_output:
  sends_to:
    - gateway
    - next_section
  emits:
    - signal: "section_completed"
      condition: if section_valid == true
    - payload:
        section_summary: "{{ generated_summary }}"
        flags: "{{ generated_flags }}"
        context: "{{ section_context }}"
    - log: "Section {{ current_section }} completed. Output dispatched to gateway."

gateway_section_5_input_hooks:
  id: gateway_section_loader_1
  description: Injects toolkit data and context into section_1 on entry.
  on_section_entry:
    - fetch: section_context.unified_results
    - fetch: report_meta
    - fetch: assigned_documents
    - fetch: previous_section.flags
    - apply_to_section:
        context_key: unified_results
        data_key: section_context.unified_results
    - log: "Section entry: Context injected for section_1"

gateway_section_5_output_hooks:
  id: gateway_section_dispatcher_5
  description: Captures section_5 output and routes updates.
  on_section_exit:
    - capture:
        - section_summary
        - flags
        - updated_context
    - store:
        section_flags: "{{ flags }}"
        report_progress: "{{ section_summary }}"
    - emit_signal: "section_received"
      payload:
        section_id: "section_2"
        status: "acknowledged"
    - log: "Gateway received and acknowledged output from section_2."

section_signal_lifecycle_template:
  on_start:
    - emit_signal: "10-6"  # Toolkit dispatched
      log: "Toolkit deployment initiated for {{ current_section }}."

 report_generation:
    - run: generate_report_section
    - log: "Report generation initiated for {{ current_section }}."

  logic_switches:
  - if: report_type == "Investigative"
    then:
      section_5:
        label: "REVIEW OF SUPPORTING DOCUMENTS"
        purpose: >
          Provide a detailed examination of all collected materials including legal filings,
          background checks, and verified confirmations relevant to the investigation.
        document_types_expected:
          - affidavits
          - case summaries
          - court filings
          - investigative attachments
        validation_checks:
          - source authenticity
          - relevance to findings
          - chain-of-custody consistency
        ordering_policy: >
          All documents must be chronologically sorted based on original documented dates, timestamps, 
          or sequence of occurrence — not the time of inclusion or presentation.
        suppress_modules:
          - vehicle_tracking
          - surveillance_timestamps

  - if: report_type == "Surveillance"
    then:
      section_5:
        label: "REVIEW OF SUPPORTING DOCUMENTS"
        purpose: >
          Evaluate collateral and observational documentation supporting field surveillance activity.
        document_types_expected:
          - field logs
          - time logs
          - photographic attachments
          - route plans
        validation_checks:
          - timestamp accuracy
          - geo-coordination match
          - visual alignment
        ordering_policy: >
          All records must follow true chronological sequence determined by documented capture time, 
          not the order in which they were inserted into the report.

  - if: report_type == "Hybrid"
    then:
      section_5:
        label: "REVIEW OF SUPPORTING DOCUMENTS"
        purpose: >
          Consolidate and verify both investigative documents and field materials for cross-context review,
          ensuring investigative materials are prioritized before field findings.
        document_types_expected:
          - investigative attachments
          - field logs
          - evidence summaries
          - mixed-media corroborations
        validation_checks:
          - hybrid reconciliation (field vs. analysis)
          - continuity integrity
          - chronological merge within type
        ordering_policy: >
          Investigative documents must be presented first, sorted chronologically by documented date/time.
          Field logs and related findings must follow, also sorted chronologically.
          This preserves the narrative integrity and distinguishes between analysis and field data.

  billing_triggers:
    - if: contract_count >= 2
      then:
        mode: "MULTICONTRACT"
        effects:
          - suppress_duplicate_planning_charges: true
          - prep_work_covered: true

    - if: is_first_field_contract
      then:
        planning_fee:
          amount: 500
          waive_condition: "explicit waiver"

  output_controls:
    style_enforced: true
    headers_dynamic_by_type: true
    narrative_adaptive: true
    time_priority: "Field Time > Received Time"
    continuity_check: "Approved Intake or Contract Required"

Section5Formatting:
  section_heading:
    title: "5. REVIEW OF SUPPORTING DOCUMENTS"
    style:
      font_size: 14pt
      font_weight: bold
      text_transform: uppercase
      underline: true
      spacing_before: 24pt

  record_structure:
    sorting_order:
      - Identity Records
      - Supporting Government Records
      - County & Court Filings
      - Delivery Confirmations
      - Case Administration
    display_format:
      - heading: "[Jurisdiction or Source – e.g., Tulsa County Sheriff’s Office Records]"
        records:
          repeatable: true
          fields:
            - description: "[Record Type – e.g., Sheriff Report, Court Docket, FOIA Response]"
            - subject_name: "[Last Name, First Name]"
            - date_reference: "[Applicable Date or Filing Date]"
            - additional_notes: "[Optional – e.g., Case ID, Tracking ID]"

  inclusivity_policy:
    include_all_documents: true
    photo_exclusion: true
    computer_filenames_omitted: true
    client_rights:
      full_record_delivery: true
      post-investigation_archive: required

  layout:
    alignment: Left
    font_family: "Times New Roman"
    font_size: 12pt
    font_weight: bold
    bullet_style: none
    indentation:
      heading_indent: 0in
      record_indent: 0.5in

Section5Logic:
  description: "Standard logic for processing and formatting supporting documents in private investigation case reports."
  core_rules:
    - All submitted documents must be included in the report unless legally restricted.
    - Photos or image files are not listed in this section unless officially classified as records (e.g., government-archived satellite maps).
    - Documents must be grouped under generalized but legally sound categories.
    - Document categories must be jurisdiction-neutral and repeatable across reports.
    - Documents must be described by record type and jurisdiction, not by original file name.
    - All records must be attributed to a named subject in Last name, First name format.
    - Intake forms and contracts must always appear as the final category in this section.
    - Document lists must maintain clean left-aligned formatting with consistent indentation.
    - Final report is client-facing and must contain a complete listing of obtained material for legal transparency and discovery standards.
  enforcement:
    - Records without names or dates trigger Q&A resolution.
    - Redundant file names are stripped.
    - All jurisdiction labels must follow this format: "[County/State/Department] Records"
    - Supporting documentation chain is validated through intake trace and document timestamp.
    - If a document proves irrelevant, erroneous, or mismatched (e.g., wrong subject), it must be:
        - flagged for review,
        - submitted to admin for removal consideration,
        - removed only upon documented approval with justification.


north_star_protocol:
  label: "Navigational and Operational Integrity Layer"
  version: "1.0"

  core_principles:
    - directional_consistency: "All investigator movements and surveillance patterns must reflect logical pursuit strategy."
    - proximity_logic: "Engagement with the subject must align with feasible route paths, distances, and timeframes."
    - observational_follow-through: "Location shifts and decisions must be traceable to a surveillance objective or observed behavior."

  validation_hooks:
    - integrated_with:
        - narrative_gap_analysis
        - continuity_check
        - context_inference_logic
    - enforcement:
        - if illogical_position_shift_detected:
            flag: true
            trigger: QnA
            correction_required: true
        - if event_time_unreachable_by_route:
            alert: "North Star Violation"
            suspend_finalization: true

cochran_theory:
  label: "Factual and Observational Integrity Filter"
  version: "2.0"

  tenets:
    - no_assumptions_without_evidence: true
    - observations_must_be_time_bound: true
    - facts_override_theories: true
    - all_inferences_must_trace_back_to_observable_data: true
    - speculation_requires_disclosure_and_justification: true

  enforcement_mechanism:
    - applied_to:
        - field_narratives
        - visual_inferences
        - subject_tracking_claims
        - cohabitation_or_relationship_summaries
    - rule_checks:
        - if statement_conflicts_with_photo:
            trigger_qna: true
            require_resolution: true
        - if observation lacks timestamp:
            apply_flag: "Cochran Violation: Time Required"
        - if behavior is assumed but not validated:
            mark_as: "Speculative – pending confirmation"

  report_effects:
    - speculative_tagging: enabled
    - conflict_resolution_prior_to_finalization: required
    - billing_impacts_logged: yes

  reverse_continuity_validation:
    anchor_points:
      - intake_form
      - client_contract
      - source_record_date
    requirements:
      - field_consistency_check: true
      - subject_name_trace: true
      - record_type_match: true
    conflict_resolution:
      - flag_if_mismatch: true
      - trigger_qna_review: true
      - resolution_required_before_lock: true

  logic_check:
    cross_field_comparison: true
    source_vs_claim_validation: true
    enforce_date_chronology: true
    require_subject_alignment: true

  qna_resolution:
    initiate_on:
      - missing_date
      - unnamed_record
      - ambiguous_jurisdiction
    prompt_template:
      - "Please verify subject name for: [Record Description]"
      - "Confirm jurisdiction source for: [Document Title]"
      - "Add applicable date for: [Record or Filing]"
    lock_until_resolved: true

  # --- REVERSE CONTINUITY TEST ---
  reverse_continuity_test:
    active: true
    trace_sources:
      - Client Intake Form
      - Client Contract
    validate_fields:
      - client_name
      - client_address
      - client_phone
      - date_of_contract
      - goals_of_investigation
      - primary_subject
      - subject_employer
      - surveillance_hours_requested
    test_methods:
      anchor_validation:
        method: "anchor_id_match + text proximity"
        tolerance: "±1 line"
      format_consistency_check:
        method: "match font, size, and field label style"
    report_behavior:
      on_pass: "continue"
      on_fail:
        - "flag report for audit"
        - "trigger Q&A clarification"
    metadata_stamp:
      include: true
      visible_in_report: false
      logs:
        - field_name
        - source_path
        - anchor_id
        - extraction_method

  continuity_check:
    enabled: true
    validation_points:
      - timestamps_match_narrative: true
      - subject_location_path_tracked: true
      - visual_evidence_supports_log: true
      - no_metadata_mentions: true
      - vague_statements_flagged: true
      - narrative_vs_photo_check: strict
      - subject_identification_confirmation: image/log corroboration
      - movement_segments_temporally_bound: true

  qna_trigger:
    rules:
      - unsupported_or_ambiguous_statement: "Flag for 1:1 Q&A"
      - contradictory_entry: "Q&A before approval"
      - unmatched narrative vs. visual: "Q&A required"
      - plate_discrepancy: "Trigger image check"
      - subject_description_mismatch: "Trigger evidence review"
      - missing time anchor: "Q&A resolution prior to report closure"
    resolution:
      - highlight_discrepant_entry: true
      - freeze_submission_until_resolved: true
      - defer to final review if internal resolution fails
 
report_ready:
  - wait_for: report_generated
  - emit_signal: "10-8"
    payload:
      section_summary: "{{ generated_summary }}"
      flags: "{{ generated_flags }}"
    log: "Report complete. Output dispatched to gateway."

gateway_review_outro:
  on_section_render_complete:
    - receive:
        source: "section_5"
        payload:
          rendered_report: "{{ section_report }}"
          toolkit_flags: "{{ generated_flags }}"
          summary: "{{ section_summary }}"
    - log: "Section section_5 submitted report to gateway for review."

  review_phase:
    - present_to_user:
        content: "{{ section_report }}"
        flags: "{{ generated_flags }}"
        summary: "{{ section_summary }}"
        prompt: "Approve this section report?"
        options: [yes, no, halt, suggest_changes]

    - wait_for_user_input:
        cases:
          - match: "yes"
            steps:
              - emit_signal: "10-4"
                payload:
                  section: "section_5"
                  status: "approved"
              - forward_to: section_fr
                content: "{{ section_report }}"
              - log: "Report approved and forwarded to FR."

          - match: "no"
            steps:
              - emit_signal: "10-9"
                payload:
                  section: "section_5"
                  status: "revision_required"
              - reroute_to: "section_5"
              - log: "Revision requested. Sent back to section."

          - match: "halt"
            steps:
              - emit_signal: "10-10"
                log: "Hard stop requested by user. Gateway frozen."
              - freeze_gateway: true
              - notify_roles: [lead_investigator]

          - match: "suggest_changes"
            steps:
              - capture_feedback:
                  field: user_suggestions
              - emit_signal: "10-9"
                payload:
                  section: "section_5"
                  status: "user_comments_added"
                  comments: "{{ user_suggestions }}"
              - reroute_to: "section_5"
              - log: "User submitted suggestions. Returned to section with feedback."

  fallback:
    - on_timeout: 48h
      notify_roles: [qa_admin, lead_investigator]
      log: "Review timeout. Manual escalation triggered."

    - on_invalid_input:
        log: "Unexpected input during section_5 review."
        notify: admin

