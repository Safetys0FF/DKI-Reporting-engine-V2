# DKI Engine - Investigation Reporting System
# Core dependencies for document processing, OCR, AI integration, and report generation

# GUI Framework
tkinter  # Built-in with Python, no installation needed
tkinterdnd2>=0.3.0          # Drag and drop functionality

# Document Processing
PyPDF2>=3.0.0              # PDF text extraction
pdfplumber>=0.9.0           # Advanced PDF processing
python-docx>=0.8.11         # Word document processing
openpyxl>=3.1.0             # Excel file processing
unstructured[all-docs]==0.18.15  # Intelligent document parsing
python-magic-bin==0.4.14        # Windows libmagic for Unstructured

# OCR and Image Processing - Multiple Engine Support
pytesseract>=0.3.10         # Tesseract OCR engine interface
easyocr>=1.7.0              # EasyOCR alternative engine
paddlepaddle>=2.5.0         # PaddleOCR backend
paddleocr>=2.7.0            # PaddleOCR alternative engine
ninja==1.13.0                # EasyOCR dependency (build tools)
opencv-python-headless==4.12.0.88  # Headless OpenCV for OCR pipelines
python-bidi==0.6.6           # Bidirectional text support for EasyOCR
scikit-image==0.25.2         # Image utilities for OCR preprocessing
Pillow>=10.0.0              # Image processing
opencv-python>=4.8.0       # Video processing and computer vision
piexif>=1.1.3               # EXIF metadata extraction

# Video and Audio Processing
moviepy>=1.0.3              # Video editing and processing
librosa>=0.10.0             # Audio analysis and feature extraction
soundfile>=0.12.1           # Audio file I/O support
ffmpeg-python>=0.2.0        # FFmpeg wrapper for media processing

# System Monitoring
psutil>=5.9.0               # System resource monitoring and performance metrics
openai-whisper>=20231107      # Offline voice transcription (alternative to legacy pipeline)

# PDF to Image (for OCR on PDFs)
pdf2image>=1.16.3           # Convert PDF pages to images

# Report Generation
reportlab>=4.0.0            # PDF generation
matplotlib>=3.7.0           # Charts and graphs (optional)

# Data Processing
pandas>=2.0.0               # Data analysis and manipulation
numpy>=1.24.0               # Numerical computing

# Web Scraping and OSINT (Optional AI tools)
requests>=2.31.0            # HTTP requests
beautifulsoup4>=4.12.0      # HTML parsing
selenium>=4.15.0            # Web browser automation

# AI and NLP (Optional)
openai>=1.0.0               # OpenAI API integration
transformers>=4.30.0        # Hugging Face transformers
torch>=2.0.0                # PyTorch for AI models
spacy>=3.6.0                # Natural language processing

# Security and Encryption
cryptography>=41.0.0        # For secure API key storage

# Premium Features - Printing System
pywin32>=306; sys_platform == "win32"  # Windows printing support

# Database (Optional for case management)
sqlite3                     # Built-in with Python
sqlalchemy>=2.0.0           # Database ORM (optional)

# Utilities
python-dateutil>=2.8.2     # Date parsing
hashlib                     # Built-in with Python
pathlib                     # Built-in with Python
json                        # Built-in with Python
logging                     # Built-in with Python
threading                   # Built-in with Python
mimetypes                   # Built-in with Python

# Development and Testing (Optional)
pytest>=7.4.0              # Testing framework
black>=23.0.0               # Code formatting
flake8>=6.0.0               # Code linting

# System Requirements Notes:
# 1. Tesseract OCR must be installed separately:
#    - Windows: Download from https://github.com/UB-Mannheim/tesseract/wiki
#    - Linux: sudo apt install tesseract-ocr
#    - macOS: brew install tesseract
#
# 2. For video processing, additional codecs may be needed
#
# 3. For AI features, GPU support may require additional CUDA libraries
#
# 4. Some features require API keys:
#    - OpenAI API key for advanced AI features
#    - Google Vision API for enhanced OCR (optional)
#    - Google Search API for OSINT verification
#    - Google Maps API for location verification
#
# 5. Premium Features:
#    - Printing: pywin32 for Windows printing support
#    - Digital Signatures: cryptography for certificate management
#    - Templates: All dependencies included in core requirements
#    - Watermarking: reportlab for PDF overlay creation
#
# Installation command:
# pip install -r requirements.txt
#
# For basic functionality without AI features:
# pip install PyPDF2 pdfplumber python-docx openpyxl pytesseract Pillow opencv-python reportlab pandas numpy requests
